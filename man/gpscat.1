'\" t
.\"     Title: gpscat
.\"    Author: Eric S. Raymond
.\" Generator: Asciidoctor 2.0.12
.\"      Date: 2021-09-20
.\"    Manual: GPSD Documentation
.\"    Source: GPSD Version 3.24
.\"  Language: English
.\"
.TH "GPSCAT" "1" "2021-09-20" "GPSD Version 3.24" "GPSD Documentation"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
gpscat \- dump the output from a GPS
.SH "SYNOPSIS"
.sp
\fBgpscat\fP [OPTIONS] file\-or\-serial\-port
.sp
\fBgpscat\fP \-h
.sp
\fBgpscat\fP \-V
.SH "DESCRIPTION"
.sp
\fBgpscat\fP is a simple program for logging and packetizing GPS data streams.
It takes input from a specified file or serial device (presumed to have
a GPS attached) and reports to standard output. The program runs until
end of input or it is interrupted by ^C or other means. It does not
terminate on a bad packet; this is intentional.
.sp
In raw mode (the default) \fBgpscat\fP simply dumps its input to standard
output. Nonprintable characters other than ASCII whitespace are rendered
as hexadecimal string escapes.
.sp
In packetizing mode, \fBgpscat\fP uses the same code as \fBgpsd\fP(8)\(aqs packet
sniffer to break the input into packets. Packets are reported one per
line; line breaks in the packets themselves are escaped.
.sp
This program is useful as a sanity checker when examining a new device.
It can be used as a primitive NMEA logger, but beware that (a)
interrupting it likely to cut off output in mid\-sentence, and (b) to
avoid displaying incomplete NMEA sentences right up next to shell
prompts that often contain a $, raw mode always emits an extra final
linefeed.
.sp
Also, be aware that packetizing mode will produce useless results \-\-
probably consuming the entirety of input and appearing to hang \-\- if
it is fed data that is not a sequence of packets of one of the known
types.
.SH "OPTIONS"
.sp
The program accepts the following options:
.sp
\fB\-?\fP, \fB\-h\fP, \fB\-\-help\fP
.RS 4
Display program usage and exit.
.RE
.sp
\fB\-D LVL\fP, \fB\-\-debug LVL\fP
.RS 4
In packetizer mode, enable progress messages from the packet getter.
Probably only of interest to developers testing packet getter changes.
Higher arguments to \fB\-D\fP produce more output.
.RE
.sp
\fB\-p\fP, \fB\-\-packetizer\fP
.RS 4
Invoke packetizer mode.
.RE
.sp
\fB\-s SPEED\fP, \fB\-\-speed SPEED\fP
.RS 4
Set the port\(cqs baud rate (and optionally its parity and stop bits) to
SPEED before reading. Argument should begin with one of the normal
integer baud rates (300, 1200, 4800, 9600, 19200, 38400, etc.). It may
be followed by an optional suffix [NOE][12] to set parity (None, Odd,
Even) and stop bits (1 or 2).
Specifying \fB\-s 4800N1\fP is frequently helpful with unknown devices.
.RE
.sp
\fB\-t\fP, \fB\-\-typeflag\fP
.RS 4
Invoke packetizer mode, with the packet type and length (in
parentheses) reported before a colon and space on each line.
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
Display program version and exit.
.RE
.SH "RETURN VALUES"
.sp
\fB0\fP
.RS 4
on success.
.RE
.sp
\fB1\fP
.RS 4
on failure
.RE
.SH "SEE ALSO"
.sp
\fBgpsd\fP(8), \fBgps\fP(1), \fBgpsfake\fP(1). \fBcgps\fP(1)
.SH "RESOURCES"
.sp
\fBProject web site:\fP \c
.URL "https://gpsd.io/" "" ""
.SH "COPYING"
.sp
This file is Copyright 2013 by the GPSD project
.br
SPDX\-License\-Identifier: BSD\-2\-clause
.SH "AUTHOR"
.sp
Eric S. Raymond